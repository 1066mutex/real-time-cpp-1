##############################################################################
#  Copyright Christopher Kormanyos 2021 - 2022.
#  Distributed under the Boost Software License,
#  Version 1.0. (See accompanying file LICENSE_1_0.txt
#  or copy at http://www.boost.org/LICENSE_1_0.txt)

#        suite: [ am335x, bcm2835_raspi_b, lpc11c24, stm32f100, stm32f407, stm32f429, stm32f446, stm32h7a3, stm32l100c, stm32l152 ]


name: real-time-cpp
on:
  push:
    branches:
      - '**'
  pull_request:
jobs:
  target-arm-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        suite: [ am335x ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: cache-macos-gnu-arm-toolchain
        id: cache-macos-gnu-arm-toolchain
        uses: actions/cache@v3
        with:
          path: ${{ runner.workspace }}/macos-gnu-arm-toolchain
          key: ${{ runner.os }}-macos-gnu-arm-toolchain
      - name: wget-unpack-macos-gnu-arm-toolchain
        if: steps.cache-macos-gnu-arm-toolchain.outputs.cache-hit != 'true'
        run: |
          echo 'wget-macos-gnu-arm-toolchain'
          echo ""
          mkdir -p macos-gnu-arm-toolchain && cd macos-gnu-arm-toolchain
          wget --no-check-certificate https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07-mac-10.14.6.tar.bz2
          tar -xvf gcc-arm-none-eabi-10.3-2021.07-mac-10.14.6.tar.bz2
        working-directory: ${{runner.workspace}}
      - name: add-path-macos-gnu-arm-toolchain
        run: |
          PATH="${{ runner.workspace }}/macos-gnu-arm-toolchain/gcc-arm-none-eabi-10.3-2021.07-mac-10.14.6/bin:$PATH"
          echo 'arm-none-eabi -v'
          arm-none-eabi -v
        working-directory: ./
      - name: target-arm-macos-${{ matrix.suite }}
        run: |
          echo Install make via brew
          brew install make
          echo ""
          echo Add the brew-installed-make path
          PATH="/usr/local/opt/make/libexec/gnubin:$PATH"
          echo ""
          echo query the GNUmake version
          make --version
          echo Manually call GNUmake to build the target
          echo ""
          make -f target/app/make/app_make_linux.gmk rebuild TGT=${{ matrix.suite }}
          echo ""
          ls -la ./bin/ref_app.hex ./bin/ref_app.s19 ./bin/ref_app.map
        working-directory: ./ref_app/
