##############################################################################
#  Copyright Christopher Kormanyos 2021 - 2022.
#  Distributed under the Boost Software License,
#  Version 1.0. (See accompanying file LICENSE_1_0.txt
#  or copy at http://www.boost.org/LICENSE_1_0.txt)

name: real-time-cpp
on:
  push:
    branches:
      - '**'
  pull_request:
jobs:
  target-avr-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        suite: [ avr, atmega2560 ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: cache-homebrew-avr
        id: cache-homebrew-avr
        uses: actions/cache@v3
        with:
          path: ${{ runner.workspace }}/homebrew-avr
          key: ${{ runner.os }}-homebrew-avr
      - name: clone-osx-cross-homebrew-avr
        if: steps.cache-homebrew-avr.outputs.cache-hit != 'true'
        run: |
          echo 'Clone osx-cross/homebrew-avr'
          echo ""
          git clone -b main --depth 1 https://github.com/osx-cross/homebrew-avr ${{ runner.workspace }}/homebrew-avr
        working-directory: ./
      - name: install-osx-cross-homebrew-avr
        run: |
          echo 'Tap osx-cross/homebrew-avr on MacOS via brew'
          echo ""
          echo 'Install osx-cross/homebrew-avr on MacOS via brew'
          cd ${{ runner.workspace }}/homebrew-avr
          brew tap osx-cross/avr
          brew install avr-gcc@11
        working-directory: ./
      - name: target-avr-macos-${{ matrix.suite }}
        run: |
          echo Install make via brew
          brew install make
          echo ""
          echo Add the brew-installed-make path
          PATH="/usr/local/opt/make/libexec/gnubin:$PATH"
          echo ""
          echo query the GNUmake version
          make --version
          echo Add the brew-installed-avr-gcc@11 path
          PATH="/usr/local/opt/avr-gcc@11/bin:$PATH"
          echo ""
          echo Query the avr-gcc version
          avr-g++ -v
          echo ""
          echo Manually call GNUmake to build the target
          echo ""
          make -f target/app/make/app_make_linux.gmk rebuild TGT=${{ matrix.suite }}
          echo ""
          ls -la ./bin/ref_app.hex ./bin/ref_app.s19 ./bin/ref_app.map
        working-directory: ./ref_app/
