##############################################################################
#  Copyright Christopher Kormanyos 2021 - 2022.
#  Distributed under the Boost Software License,
#  Version 1.0. (See accompanying file LICENSE_1_0.txt
#  or copy at http://www.boost.org/LICENSE_1_0.txt)

name: real-time-cpp
on:
  push:
    branches:
      - '**'
  pull_request:
jobs:
  target-msvc-example16_08:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        example: [ chapter16_08 ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/config
          git submodule update --init libs/math
          git submodule update --init libs/multiprecision
          ./bootstrap.bat
          ./b2 headers
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
      - name: target-msvc-example16_08
        shell: cmd
        working-directory: ./
        run: |
          cd examples/${{ matrix.example }}
          set INCLUDE=%cd%\src\mcal\win32;%cd%\src;%cd%\..\..\..\boost-root;%INCLUDE%
          MSBuild -m ${{ matrix.example }}.sln -p:useenv=true -p:Configuration=Release -p:Platform=x64 /t:Rebuild
          dir .\Release\${{ matrix.example }}.exe
  msvc-msbuild-avr:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    strategy:
      fail-fast: false
      matrix:
        suite: [ avr, atmega2560, atmega4809 ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.2
      - name: clone-real-time-cpp-toolchains-master
        run: |
          echo Cloning GNU/GCC toolchain
          git clone -b master --depth 1 https://github.com/ckormanyos/real-time-cpp-toolchains.git ../toolchains
        working-directory: ./
      - name: extract-real-time-cpp-toolchain
        run: |
          echo Moving GNU/GCC toolchain
          move ..\toolchains\ref_app\tools .\ref_app\tools
          cd .\ref_app\tools\Util\msys64\usr\local
          dir
          echo Extracting GNU/GCC toolchain
          start /b /wait gcc-11.2.0-avr.exe -y -gm2 -InstallPath=".\\gcc-11.2.0-avr"
        working-directory: ./
      - name: msvc-msbuild-${{ matrix.suite }}
        run: |
          MSBuild -m ref_app.sln -p:Configuration="target ${{ matrix.suite }}" -p:Platform=x64 /t:Rebuild
          dir .\bin\ref_app.elf .\bin\ref_app.hex .\bin\ref_app.s19
        working-directory: ./ref_app/
  msvc-msbuild-arm:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    strategy:
      fail-fast: false
      matrix:
        suite: [ am335x ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.2
      - name: clone-real-time-cpp-toolchains-master
        run: |
          echo Cloning GNU/GCC toolchain
          git clone -b master --depth 1 https://github.com/ckormanyos/real-time-cpp-toolchains.git ../toolchains
        working-directory: ./
      - name: extract-real-time-cpp-toolchain
        run: |
          echo Moving GNU/GCC toolchain
          move ..\toolchains\ref_app\tools .\ref_app\tools
          cd .\ref_app\tools\Util\msys64\usr\local
          dir
          echo Extracting GNU/GCC toolchain
          start /b /wait gcc-11.2.0-arm-none-eabi.exe -y -gm2 -InstallPath=".\\gcc-11.2.0-arm-none-eabi"
        working-directory: ./
      - name: msvc-msbuild-${{ matrix.suite }}
        run: |
          MSBuild -m ref_app.sln -p:Configuration="target ${{ matrix.suite }}" -p:Platform=x64 /t:Rebuild
          dir .\bin\ref_app.elf .\bin\ref_app.hex .\bin\ref_app.s19
        working-directory: ./ref_app/
  msvc-msbuild-rl78:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    strategy:
      fail-fast: false
      matrix:
        suite: [ rl78 ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.2
      - name: clone-real-time-cpp-toolchains-master
        run: |
          echo Cloning GNU/GCC toolchain
          git clone -b master --depth 1 https://github.com/ckormanyos/real-time-cpp-toolchains.git ../toolchains
        working-directory: ./
      - name: extract-real-time-cpp-toolchain
        run: |
          echo Moving GNU/GCC toolchain
          move ..\toolchains\ref_app\tools .\ref_app\tools
          cd .\ref_app\tools\Util\msys64\usr\local
          dir
          echo Extracting GNU/GCC toolchain
          start /b /wait gcc-11.2.0-rl78-unknown-elf.exe -y -gm2 -InstallPath=".\\gcc-11.2.0-rl78-unknown-elf"
        working-directory: ./
      - name: msvc-msbuild-${{ matrix.suite }}
        run: |
          MSBuild -m ref_app.sln -p:Configuration="target ${{ matrix.suite }}" -p:Platform=x64 /t:Rebuild
          dir .\bin\ref_app.elf .\bin\ref_app.hex .\bin\ref_app.s19
        working-directory: ./ref_app/
  msvc-msbuild-rx63n:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    strategy:
      fail-fast: false
      matrix:
        suite: [ rx63n ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.2
      - name: clone-real-time-cpp-toolchains-master
        run: |
          echo Cloning GNU/GCC toolchain
          git clone -b master --depth 1 https://github.com/ckormanyos/real-time-cpp-toolchains.git ../toolchains
        working-directory: ./
      - name: extract-real-time-cpp-toolchain
        run: |
          echo Moving GNU/GCC toolchain
          move ..\toolchains\ref_app\tools .\ref_app\tools
          cd .\ref_app\tools\Util\msys64\usr\local
          dir
          echo Extracting GNU/GCC toolchain
          start /b /wait gcc-11.2.0-rx-elf.exe -y -gm2 -InstallPath=".\\gcc-11.2.0-rx-elf"
        working-directory: ./
      - name: msvc-msbuild-${{ matrix.suite }}
        run: |
          MSBuild -m ref_app.sln -p:Configuration="target ${{ matrix.suite }}" -p:Platform=x64 /t:Rebuild
          dir .\bin\ref_app.elf .\bin\ref_app.hex .\bin\ref_app.s19
        working-directory: ./ref_app/
  msvc-msbuild-v850:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    strategy:
      fail-fast: false
      matrix:
        suite: [ v850es_fx2 ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.2
      - name: clone-real-time-cpp-toolchains-master
        run: |
          echo Cloning GNU/GCC toolchain
          git clone -b master --depth 1 https://github.com/ckormanyos/real-time-cpp-toolchains.git ../toolchains
        working-directory: ./
      - name: extract-real-time-cpp-toolchain
        run: |
          echo Moving GNU/GCC toolchain
          move ..\toolchains\ref_app\tools .\ref_app\tools
          cd .\ref_app\tools\Util\msys64\usr\local
          dir
          echo Extracting GNU/GCC toolchain
          start /b /wait gcc-11.2.0-v850-unknown-elf.exe -y -gm2 -InstallPath=".\\gcc-11.2.0-v850-unknown-elf"
        working-directory: ./
      - name: msvc-msbuild-${{ matrix.suite }}
        run: |
          MSBuild -m ref_app.sln -p:Configuration="target ${{ matrix.suite }}" -p:Platform=x64 /t:Rebuild
          dir .\bin\ref_app.elf .\bin\ref_app.hex .\bin\ref_app.s19
        working-directory: ./ref_app/
